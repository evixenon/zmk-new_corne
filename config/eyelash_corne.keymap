#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&mt TAB ESC   &kp Q  &kp W  &kp E     &kp R  &kp T                               &kp UP                &kp Y        &kp U  &kp I      &kp O    &kp P     &kp BSPC
&mt CAPS TAB  &kp A  &kp S  &kp D     &kp F  &kp G                  &kp LEFT  &mkp LCLK &kp RIGHT &kp H        &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT     &kp Z  &kp X  &kp C     &kp V  &kp B        &kp SPACE              &kp DOWN               &kp N        &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                         &kp LGUI  &lt 1 SPACE  &kp LALT                                               &kp  ENTER  &lt 2 SPACE &kp RALT
            >;

             sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;

           
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&kp ESC    &kp N1 &kp N2 &kp N3   &kp N4   &kp N5                                         &mmv MOVE_UP              &kp N6           &kp N7           &kp N8           &kp N9           &kp N0    &kp BSPC
&kp LCTRL  &kp F1 &kp F2 &kp F3   &kp F4   &kp F5                  &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT         &kp DOWN         &kp UP           &kp RIGHT        &kp HOME  &kp PG_UP
&kp LSHFT  &kp F6 &kp F7 &kp F8   &kp F9   &kp F10   &kp C_MUTE                    &mmv MOVE_DOWN                   &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp END   &kp PG_DN
                       &mo 3    &trans     &kp SPACE                                                                          &kp RET          &kp INS          &kp RALT
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&kp ESC     &kp EXCL      &kp AT        &kp HASH   &kp DLLR   &kp PRCNT                            &mmv MOVE_UP                     &kp CARET &kp AMPS  &kp ASTRK &kp LPAR  &kp RPAR   &kp DEL
&trans      &mkp LCLK     &mkp MCLK  &mkp RCLK   &kp LBRC     &kp RBRC             &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &kp UNDER  &kp PLUS
&kp LCTRL   &mkp MB4      &mkp MB5   &trans      &kp LBKT     &kp RBKT   &trans                    &mmv MOVE_DOWN                   &kp HOME  &kp END   &kp PG_UP &kp PG_DN &kp MINUS  &kp EQUAL
                                    &kp LGUI     &trans     &kp LALT                                                             &kp RET    &trans     &mo 4
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&studio_unlock  &kp EXCL  &kp AT    &kp HASH  &kp DLLR &kp PRCNT                                       &mmv MOVE_UP                     &kp KP_N7 &kp KP_N8  &kp KP_N9  &kp LPAR  &kp RPAR  &kp BSPC
&trans          &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR                        &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp KP_N4 &kp KP_N5  &kp KP_N6  &kp PLUS  &kp ASTRK &kp GRAVE
&trans          &trans  &trans &out OUT_USB &out OUT_USB   &trans  &kp C_MUTE               &mmv MOVE_DOWN                   &kp KP_N1 &kp KP_N2  &kp KP_N3  &kp MINUS &kp FSLH  &kp TILDE
                                       &trans       &trans     &trans                                                                   &kp RET   &kp KP_N0  &kp EQUAL
            >;

            sensor-bindings = <&scroll_encoder>;
        };
        
        layer_4 {
            display-name = "media";
            bindings = <
&bt BT_CLR  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                                        &mmv MOVE_UP                     &kp F6       &kp F7     &kp F8       &kp F9      &kp F10          &kp F11
&sys_reset  &kp C_VOL_UP &kp C_BRI_UP &rgb_ug RGB_EFF &rgb_ug RGB_BRI  &rgb_ug RGB_ON                        &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &bootloader  &mkp LCLK  &mkp MCLK    &mkp RCLK   &kp PRINTSCREEN  &kp F12
&bootloader &kp C_VOL_DN &kp C_BRI_DN &rgb_ug RGB_EFR &rgb_ug RGB_BRD  &rgb_ug RGB_OFF   &rgb_ug RGB_SPI            &mmv MOVE_DOWN                   &trans       &trans     &bootloader  &sys_reset  &kp SCROLLLOCK   &kp PAUSE_BREAK
                                       &trans       &trans     &trans                                                                   &trans       &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
